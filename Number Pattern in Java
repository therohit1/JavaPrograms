Skip to content
Search or jump to…

Pull requests
Issues
Marketplace
Explore
 
@therohit1 
therohit1
/
JavaPrograms
1
00
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
JavaPrograms/Simple Star Patterns in Java
@therohit1
therohit1 Update Simple Star Patterns in Java
Latest commit d0d3fc5 now
 History
 1 contributor
201 lines (177 sloc)  4.75 KB
  
import java.util.*;
public class Main
{
  public static void main (String[]args)
  {
    System.out.println ("Enter a number.");
    Scanner sc = new Scanner (System.in);

    // Enter size.
    int n = sc.nextInt ();
    int row, col;
    
    System.out.println("Right Triangle Star Pattern.");
    for(row = 0; row<n; row++){
        for(col = 0; col<=row; col++){
            System.out.print("*");
        }
        System.out.println();
    }
    
    System.out.println("-----------------------------------------------");
    System.out.println("Reverse Right Triangle Star Pattern.");
    for(row = n-1; row >= 0; row--){
        for(col = 0; col<=row; col++){
            System.out.print("*");
        }
        System.out.println();
    }
    System.out.println("-----------------------------------------------");
    System.out.println("Left Triangle Star Pattern.");
    for(row = 0; row < n; row++){
        for(col = n-row; col >1; col--){
            System.out.print(" ");
        }
        for(col = 0; col<=row; col++){
            System.out.print("*");
        }
        System.out.println();
    }
    
    System.out.println("-----------------------------------------------");
    System.out.println("Reverse Left Triangle Star Pattern.");
    for (int i = n; i > 0; i--)
      {
    	for (int j = n-i; j >= 1; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 1; k <= i; k++)
    	  {
    	    System.out.print ("*");
    	  }
	System.out.println ();
  }
  
    // forward star pyramid pattern
    System.out.println("-----------------------------------------------");
    System.out.println("Forward Star Pyramid Pattern.");
    for (int i = 0; i < n; i++)
      {
    	for (int j = n-i; j > 1; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 0; k < i+1; k++)
    	  {
    	    System.out.print ("*"+" ");
    	  }
	System.out.println ();
      }
     
    // reverse star pyramid pattern
    System.out.println("-----------------------------------------------");
    System.out.println("Reverse Star Pyramid Pattern.");
    for (int i = n; i > 0; i--)
      {
    	for (int j = n-i; j > 0; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 0; k < i; k++)
    	  {
    	    System.out.print ("*"+" ");
    	  }
	System.out.println ();
    }
  
    // Diamond pattern.
    System.out.println("-----------------------------------------------");
    System.out.println("Diamond pattern.");
    for (int i = 0; i < n; i++)
      {
    	for (int j = n-i; j > 1; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 0; k < i+1; k++)
    	  {
    	    System.out.print ("*"+" ");
    	  }
	System.out.println ();
      }
    for (int i = n-1; i > 0; i--)
      {
    	for (int j = n-i; j > 0; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 0; k < i; k++)
    	  {
    	    System.out.print ("*"+" ");
    	  }
	System.out.println ();
    }
     
     
    //  SandGlass Pattern.
    System.out.println("-----------------------------------------------");  
    System.out.println("SandGlass Pattern.");
    // reverse star pyramid pattern
    for (int i = n; i > 1; i--)
      {
    	for (int j = n-i; j > 0; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 0; k < i; k++)
    	  {
    	    System.out.print ("*"+" ");
    	  }
	System.out.println ();
      }
     
    // forward star pyramid pattern
    for (int i = 0; i < n; i++)
      {
    	for (int j = n-i; j > 1; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 0; k < i+1; k++)
    	  {
    	    System.out.print ("*"+" ");
    	  }
	System.out.println ();
    }
    
    // Right Pascal's Triangle.
    System.out.println("-----------------------------------------------");
    System.out.println("Right Pascal's Triangle.");
    for(row = 0; row<n-1; row++){
        for(col = 0; col<=row; col++){
            System.out.print("*");
        }
        System.out.println();
    }
    
    for(row = n-1; row >= 0; row--){
        for(col = 0; col<=row; col++){
            System.out.print("*");
        }
        System.out.println();
    }
    
    
    // Left Pascal's Triangle.
    System.out.println("-----------------------------------------------");
    System.out.println("Left Pascal's Triangle.");
    for(row = 0; row < n-1; row++){
        for(col = n-row; col >1; col--){
            System.out.print(" ");
        }
        for(col = 0; col<=row; col++){
            System.out.print("*");
        }
        System.out.println();
    }
    
    for (int i = n; i >= 0; i--)
      {
    	for (int j = n-i; j >= 1; j--)
    	  {
    	    System.out.print (" ");
    	  }

    	for (int k = 1; k <= i; k++)
    	  {
    	    System.out.print ("*");
    	  }
	System.out.println ();
  }
   
}
}
© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
